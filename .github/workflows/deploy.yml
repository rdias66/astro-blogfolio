name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore NPM cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-packages-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-packages-

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

  docker_build_and_push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to AWS ECR
        run: |
          aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin 891377290474.dkr.ecr.sa-east-1.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: sa-east-1

      - name: Build Docker image
        run: docker build -t blogfolio/frontend .

      - name: Tag Docker image
        run: docker tag blogfolio/frontend:latest 891377290474.dkr.ecr.sa-east-1.amazonaws.com/blogfolio/frontend:latest

      - name: Push Docker image to ECR
        run: docker push 891377290474.dkr.ecr.sa-east-1.amazonaws.com/blogfolio/frontend:latest

  deploy:
    needs: docker_build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_HOST }}  # SSH host fingerprint to avoid prompt

      - name: Authenticate on AWS ECR over SSH
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST \
          "aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin 891377290474.dkr.ecr.sa-east-1.amazonaws.com"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: sa-east-1

    - name: Deploy over SSH
         run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST \
          "aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin 891377290474.dkr.ecr.sa-east-1.amazonaws.com; \
          sudo docker rm --force frontend_app_1; \
          sudo docker pull 891377290474.dkr.ecr.sa-east-1.amazonaws.com/blogfolio/frontend:latest; \
         sudo docker run --name frontend_app_1 --network frontend --restart unless-stopped -d 891377290474.dkr.ecr.sa-east-1.amazonaws.com/blogfolio/frontend:latest"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: sa-east-1

